%\VignetteIndexEntry{Customizing arrayQualityMetrics reports}
%\VignetteDepends{arrayQualityMetrics,CCl4,vsn}
%\VignettePackage{arrayQualityMetrics}

\documentclass[11pt]{article}

\usepackage{times}
\usepackage{a4wide}
\usepackage{verbatim}
\usepackage[pdftex,linktocpage]{hyperref}

\newcommand{\Robject}[1]{\texttt{#1}}
\newcommand{\Rpackage}[1]{\textit{#1}}
\newcommand{\Rclass}[1]{\textit{#1}}
\newcommand{\Rfunction}[1]{{\small\texttt{#1}}}
\parindent0cm

\SweaveOpts{keep.source=TRUE,eps=FALSE,include=FALSE,width=4,height=4.5}

\begin{document}

\title{Customizing arrayQualityMetrics reports}
\author{Audrey Kauffmann}
\maketitle
\tableofcontents

<<echo=FALSE,results=hide>>=
options(error=recover)
@ 

%--------------------------------------------------
\section{Introduction}
%--------------------------------------------------
In the other vignette of this package, \emph{Microarray quality assessment with
  arrayQualityMetrics}, you can learn how to use the
\Rfunction{arrayQualityMetrics} function to create an array quality report. If
you are new to this package, then that is what you should consult.

This vignette addresses a more advanced topic: how to customize the
report by selecting specific modules and sections, or adding your own
ones.

\paragraph{Sections and modules:} In the documentation of this package, we refer
to a \emph{module} as a self-contained element of a report, which usually consists of a 
figure, some explanatory text, and potentially a set of flags for the arrays in
datasets that classifies some of them as outliers. We refer to a \emph{section} as a
collection of one or more modules that are thematically related.

For the following examples, let us load the needed packages and some data.

<<loading, results=hide>>=
library("arrayQualityMetrics")
library("CCl4")
library("vsn")
data("CCl4")
nCCl4 = justvsn(CCl4, subsample=2200)
@


%--------------------------------------------------
\section{Data preparation}
%--------------------------------------------------
Some of the computations that are needed for the modules are common
between several modules, and thus we perform them once,
beforehand. These functions are called \Rfunction{prepdata} and
\Rfunction{prepaffy}, and we refer to their manual page for 
details. For example,

<<DataPreparation>>=
dataprep = prepdata(expressionset = nCCl4, 
                    intgroup = c(), 
                    do.logtransform = FALSE, 
                    usesvg = capabilities()["cairo"])
@ 

The arguments \Robject{intgroup}, \Robject{do.logtransform} and
\Robject{usesvg} are the same as for \Rfunction{arrayQualityMetrics},
but in \Rfunction{prepdata} they have no defaults, so we need to set
them explicitely.

%--------------------------------------------------
\section{Module generating functions}
%--------------------------------------------------
The package contains a variety of functions that compute modules, and they are
listed on a manual page which you can access by typing:

<<eval=FALSE>>=
?aqm.boxplot
@ 

Here, let us create a report with only two quality metrics modules: 
boxplots and density plots.

<<metrics>>=
bo = aqm.boxplot(dataprep)
de = aqm.density(dataprep)
qm = list("Boxplot" = bo, "Density" = de)
@ 

If you want to create your own modules, please have a look at the code
for the various existing functions for this purpose, and adapt it.

%--------------------------------------------------
\section{Rendering the report}
%--------------------------------------------------
A report is rendered by calling the function
\Rfunction{aqm.writereport} with a list
of \Rclass{aqmReportModule} objects.

<<shortReport>>=
outdir = tempdir()
aqm.writereport(modules = qm, reporttitle = "My example", outdir = outdir, arrayTable = pData(CCl4))
outdir
@ 

%--------------------------------------------------
\subsection*{Session Info}
%--------------------------------------------------
<<pkgs, results=tex>>=
toLatex(sessionInfo())
@

\end{document}
